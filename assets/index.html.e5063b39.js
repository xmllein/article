import{_ as p,r as o,o as e,c,a as n,b as a,d as t,e as i}from"./app.26c798e2.js";const u={},l=i(`<h2 id="oc-网络" tabindex="-1"><a class="header-anchor" href="#oc-网络" aria-hidden="true">#</a> oc 网络</h2><h3 id="使用-nsurlsession-进行网络请求" tabindex="-1"><a class="header-anchor" href="#使用-nsurlsession-进行网络请求" aria-hidden="true">#</a> 使用 <code>NSURLSession</code> 进行网络请求</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>NSURLSession <span class="token operator">*</span>session <span class="token operator">=</span> <span class="token punctuation">[</span>NSURLSession sharedSession<span class="token punctuation">]</span><span class="token punctuation">;</span>

NSURLSessionDataTask <span class="token operator">*</span>task <span class="token operator">=</span> <span class="token punctuation">[</span>session dataTaskWithURL<span class="token punctuation">:</span><span class="token punctuation">[</span>NSURL URLWithString<span class="token punctuation">:</span><span class="token string">@&quot;http://www.baidu.com&quot;</span><span class="token punctuation">]</span> completionHandler<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>NSData <span class="token operator">*</span> _Nullable data<span class="token punctuation">,</span> NSURLResponse <span class="token operator">*</span> _Nullable response<span class="token punctuation">,</span> NSError <span class="token operator">*</span> _Nullable error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;data: %@&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSString alloc<span class="token punctuation">]</span> initWithData<span class="token punctuation">:</span>data encoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span>task resume<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-nsurlconnection-进行网络请求" tabindex="-1"><a class="header-anchor" href="#使用-nsurlconnection-进行网络请求" aria-hidden="true">#</a> 使用 <code>NSURLConnection</code> 进行网络请求</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>NSURL <span class="token operator">*</span>url <span class="token operator">=</span> <span class="token punctuation">[</span>NSURL URLWithString<span class="token punctuation">:</span><span class="token string">@&quot;http://www.baidu.com&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

NSURLRequest <span class="token operator">*</span>request <span class="token operator">=</span> <span class="token punctuation">[</span>NSURLRequest requestWithURL<span class="token punctuation">:</span>url<span class="token punctuation">]</span><span class="token punctuation">;</span>

NSURLConnection <span class="token operator">*</span>connection <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NSURLConnection alloc<span class="token punctuation">]</span> initWithRequest<span class="token punctuation">:</span>request delegate<span class="token punctuation">:</span><span class="token keyword">self</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span>connection start<span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-afnetworking-进行网络请求" tabindex="-1"><a class="header-anchor" href="#使用-afnetworking-进行网络请求" aria-hidden="true">#</a> 使用 <code>AFNetworking</code> 进行网络请求</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>AFHTTPSessionManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPSessionManager manager<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span>manager GET<span class="token punctuation">:</span><span class="token string">@&quot;http://www.baidu.com&quot;</span> parameters<span class="token punctuation">:</span>nil progress<span class="token punctuation">:</span>nil success<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span> _Nonnull task<span class="token punctuation">,</span> id  _Nullable responseObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;responseObject: %@&quot;</span><span class="token punctuation">,</span> responseObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> failure<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span> _Nullable task<span class="token punctuation">,</span> NSError <span class="token operator">*</span> _Nonnull error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;error: %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-afnetworking-进行文件上传" tabindex="-1"><a class="header-anchor" href="#使用-afnetworking-进行文件上传" aria-hidden="true">#</a> 使用 <code>AFNetworking</code> 进行文件上传</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code>AFHTTPSessionManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPSessionManager manager<span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token punctuation">[</span>manager POST<span class="token punctuation">:</span><span class="token string">@&quot;http://www.baidu.com&quot;</span> parameters<span class="token punctuation">:</span>nil constructingBodyWithBlock<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>id<span class="token operator">&lt;</span>AFMultipartFormData<span class="token operator">&gt;</span>  _Nonnull formData<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token punctuation">[</span>formData appendPartWithFileData<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token string">@&quot;hello&quot;</span> dataUsingEncoding<span class="token punctuation">:</span>NSUTF8StringEncoding<span class="token punctuation">]</span> name<span class="token punctuation">:</span><span class="token string">@&quot;file&quot;</span> fileName<span class="token punctuation">:</span><span class="token string">@&quot;file.txt&quot;</span> mimeType<span class="token punctuation">:</span><span class="token string">@&quot;text/plain&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> progress<span class="token punctuation">:</span>nil success<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span> _Nonnull task<span class="token punctuation">,</span> id  _Nullable responseObject<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;responseObject: %@&quot;</span><span class="token punctuation">,</span> responseObject<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> failure<span class="token punctuation">:</span><span class="token operator">^</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span> _Nullable task<span class="token punctuation">,</span> NSError <span class="token operator">*</span> _Nonnull error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">NSLog</span><span class="token punctuation">(</span><span class="token string">@&quot;error: %@&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="封装网络请求" tabindex="-1"><a class="header-anchor" href="#封装网络请求" aria-hidden="true">#</a> 封装网络请求</h3><div class="language-objc line-numbers-mode" data-ext="objc"><pre class="language-objc"><code><span class="token keyword">@interface</span> NetworkManager <span class="token punctuation">:</span> NSObject

<span class="token operator">+</span> <span class="token punctuation">(</span>instancetype<span class="token punctuation">)</span>sharedManager<span class="token punctuation">;</span>

<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>GET<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>urlString parameters<span class="token punctuation">:</span><span class="token punctuation">(</span>NSDictionary <span class="token operator">*</span><span class="token punctuation">)</span>parameters success<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> id responseObject<span class="token punctuation">)</span><span class="token punctuation">)</span>success failure<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> NSError <span class="token operator">*</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>failure<span class="token punctuation">;</span>

<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>POST<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>urlString parameters<span class="token punctuation">:</span><span class="token punctuation">(</span>NSDictionary <span class="token operator">*</span><span class="token punctuation">)</span>parameters success<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> id responseObject<span class="token punctuation">)</span><span class="token punctuation">)</span>success failure<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> NSError <span class="token operator">*</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>failure<span class="token punctuation">;</span>

<span class="token keyword">@end</span>

<span class="token keyword">@implementation</span> NetworkManager

<span class="token operator">+</span> <span class="token punctuation">(</span>instancetype<span class="token punctuation">)</span>sharedManager <span class="token punctuation">{</span>
    <span class="token keyword">static</span> NetworkManager <span class="token operator">*</span>manager <span class="token operator">=</span> nil<span class="token punctuation">;</span>
    <span class="token keyword">static</span> dispatch_once_t onceToken<span class="token punctuation">;</span>
    <span class="token function">dispatch_once</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>onceToken<span class="token punctuation">,</span> <span class="token operator">^</span><span class="token punctuation">{</span>
        manager <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>NetworkManager alloc<span class="token punctuation">]</span> init<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> manager<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// GET 请求</span>

<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>GET<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>urlString parameters<span class="token punctuation">:</span><span class="token punctuation">(</span>NSDictionary <span class="token operator">*</span><span class="token punctuation">)</span>parameters success<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> id responseObject<span class="token punctuation">)</span><span class="token punctuation">)</span>success failure<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> NSError <span class="token operator">*</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>failure <span class="token punctuation">{</span>
    AFHTTPSessionManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPSessionManager manager<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>manager GET<span class="token punctuation">:</span>urlString parameters<span class="token punctuation">:</span>parameters progress<span class="token punctuation">:</span>nil success<span class="token punctuation">:</span>success failure<span class="token punctuation">:</span>failure<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// Post 请求</span>
<span class="token operator">-</span> <span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span>POST<span class="token punctuation">:</span><span class="token punctuation">(</span>NSString <span class="token operator">*</span><span class="token punctuation">)</span>urlString parameters<span class="token punctuation">:</span><span class="token punctuation">(</span>NSDictionary <span class="token operator">*</span><span class="token punctuation">)</span>parameters success<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> id responseObject<span class="token punctuation">)</span><span class="token punctuation">)</span>success failure<span class="token punctuation">:</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">^</span><span class="token punctuation">)</span><span class="token punctuation">(</span>NSURLSessionDataTask <span class="token operator">*</span>task<span class="token punctuation">,</span> NSError <span class="token operator">*</span>error<span class="token punctuation">)</span><span class="token punctuation">)</span>failure <span class="token punctuation">{</span>
    AFHTTPSessionManager <span class="token operator">*</span>manager <span class="token operator">=</span> <span class="token punctuation">[</span>AFHTTPSessionManager manager<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span>manager POST<span class="token punctuation">:</span>urlString parameters<span class="token punctuation">:</span>parameters progress<span class="token punctuation">:</span>nil success<span class="token punctuation">:</span>success failure<span class="token punctuation">:</span>failure<span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">@end</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="swift-网络" tabindex="-1"><a class="header-anchor" href="#swift-网络" aria-hidden="true">#</a> swift 网络</h2><h3 id="使用-urlsession-进行网络请求" tabindex="-1"><a class="header-anchor" href="#使用-urlsession-进行网络请求" aria-hidden="true">#</a> 使用 <code>URLSession</code> 进行网络请求</h3><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code><span class="token keyword">let</span> session <span class="token operator">=</span> <span class="token class-name">URLSession</span><span class="token punctuation">.</span>shared

<span class="token keyword">let</span> task <span class="token operator">=</span> session<span class="token punctuation">.</span><span class="token function">dataTask</span><span class="token punctuation">(</span>with<span class="token punctuation">:</span> <span class="token function">URL</span><span class="token punctuation">(</span>string<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;http://www.baidu.com&quot;</span></span><span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>data<span class="token punctuation">,</span> response<span class="token punctuation">,</span> error<span class="token punctuation">)</span> <span class="token keyword">in</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;data: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation"><span class="token class-name">String</span><span class="token punctuation">(</span>data<span class="token punctuation">:</span> data<span class="token operator">!</span><span class="token punctuation">,</span> encoding<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span></span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

task<span class="token punctuation">.</span><span class="token function">resume</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-alamofire-进行网络请求" tabindex="-1"><a class="header-anchor" href="#使用-alamofire-进行网络请求" aria-hidden="true">#</a> 使用 <code>Alamofire</code> 进行网络请求</h3><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>
<span class="token class-name">Alamofire</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;http://www.baidu.com&quot;</span></span><span class="token punctuation">)</span><span class="token punctuation">.</span>responseJSON <span class="token punctuation">{</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token keyword">in</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;response: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">response</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="使用-alamofire-进行文件上传" tabindex="-1"><a class="header-anchor" href="#使用-alamofire-进行文件上传" aria-hidden="true">#</a> 使用 <code>Alamofire</code> 进行文件上传</h3><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>
<span class="token class-name">Alamofire</span><span class="token punctuation">.</span><span class="token function">upload</span><span class="token punctuation">(</span>multipartFormData<span class="token punctuation">:</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>multipartFormData<span class="token punctuation">)</span> <span class="token keyword">in</span>
    multipartFormData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;hello&quot;</span></span><span class="token punctuation">.</span><span class="token function">data</span><span class="token punctuation">(</span>using<span class="token punctuation">:</span> <span class="token punctuation">.</span>utf8<span class="token punctuation">)</span><span class="token operator">!</span><span class="token punctuation">,</span> withName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;file&quot;</span></span><span class="token punctuation">,</span> fileName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;file.txt&quot;</span></span><span class="token punctuation">,</span> mimeType<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;text/plain&quot;</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> to<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&quot;http://www.baidu.com&quot;</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token punctuation">(</span>encodingResult<span class="token punctuation">)</span> <span class="token keyword">in</span>
    <span class="token keyword">switch</span> encodingResult <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">let</span> upload<span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">,</span> <span class="token omit keyword">_</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        upload<span class="token punctuation">.</span>responseJSON <span class="token punctuation">{</span> response <span class="token keyword">in</span>
            <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;response: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">response</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token keyword">let</span> encodingError<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&quot;encodingError: </span><span class="token interpolation-punctuation punctuation">\\(</span><span class="token interpolation">encodingError</span><span class="token interpolation-punctuation punctuation">)</span><span class="token string">&quot;</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="封装网络请求-1" tabindex="-1"><a class="header-anchor" href="#封装网络请求-1" aria-hidden="true">#</a> 封装网络请求</h3><div class="language-swift line-numbers-mode" data-ext="swift"><pre class="language-swift"><code>
<span class="token keyword">class</span> <span class="token class-name">NetworkManager</span> <span class="token punctuation">{</span>
    <span class="token keyword">static</span> <span class="token keyword">let</span> shared <span class="token operator">=</span> <span class="token class-name">NetworkManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

    <span class="token keyword">func</span> <span class="token function-definition function">get</span><span class="token punctuation">(</span>urlString<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> parameters<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">,</span> success<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token keyword">Any</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">,</span> failure<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Error</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Alamofire</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>urlString<span class="token punctuation">,</span> method<span class="token punctuation">:</span> <span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">,</span> parameters<span class="token punctuation">:</span> parameters<span class="token punctuation">)</span><span class="token punctuation">.</span>responseJSON <span class="token punctuation">{</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token keyword">in</span>
            <span class="token keyword">switch</span> response<span class="token punctuation">.</span>result <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">let</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token function">success</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token keyword">let</span> error<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token function">failure</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">func</span> <span class="token function-definition function">post</span><span class="token punctuation">(</span>urlString<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span> parameters<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token class-name">String</span><span class="token punctuation">:</span> <span class="token keyword">Any</span><span class="token punctuation">]</span><span class="token operator">?</span><span class="token punctuation">,</span> success<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token keyword">Any</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">,</span> failure<span class="token punctuation">:</span> <span class="token attribute atrule">@escaping</span> <span class="token punctuation">(</span><span class="token class-name">Error</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Void</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Alamofire</span><span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span>urlString<span class="token punctuation">,</span> method<span class="token punctuation">:</span> <span class="token punctuation">.</span>post<span class="token punctuation">,</span> parameters<span class="token punctuation">:</span> parameters<span class="token punctuation">)</span><span class="token punctuation">.</span>responseJSON <span class="token punctuation">{</span> <span class="token punctuation">(</span>response<span class="token punctuation">)</span> <span class="token keyword">in</span>
            <span class="token keyword">switch</span> response<span class="token punctuation">.</span>result <span class="token punctuation">{</span>
            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token keyword">let</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token function">success</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
            <span class="token keyword">case</span> <span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span><span class="token keyword">let</span> error<span class="token punctuation">)</span><span class="token punctuation">:</span>
                <span class="token function">failure</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考" aria-hidden="true">#</a> 参考</h2>`,21),r={href:"https://www.raywenderlich.com/110458/nsurlsession-tutorial-getting-started",target:"_blank",rel:"noopener noreferrer"},k={href:"https://www.raywenderlich.com/110458/nsurlconnection-tutorial-getting-started",target:"_blank",rel:"noopener noreferrer"},d={href:"https://www.raywenderlich.com/147086/alamofire-tutorial-getting-started-2",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const s=o("ExternalLinkIcon");return e(),c("div",null,[l,n("ul",null,[n("li",null,[n("a",r,[a("NSURLSession Tutorial: Getting Started"),t(s)])]),n("li",null,[n("a",k,[a("NSURLConnection Tutorial for iOS: How To Use NSURLConnection Using Swift"),t(s)])]),n("li",null,[n("a",d,[a("Alamofire Tutorial: Getting Started"),t(s)])])])])}const f=p(u,[["render",v],["__file","index.html.vue"]]);export{f as default};
