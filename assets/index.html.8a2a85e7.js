import{_ as l,r as t,o as s,c,a as e,b as r,d as a,e as n}from"./app.26c798e2.js";const p="/article/images/fe_performance/1.png",o="/article/images/fe_performance/2.png",m="/article/images/fe_performance/3.png",_="/article/images/fe_performance/6.png",g="/article/images/fe_performance/7.png",f="/article/images/fe_performance/9.png",h="/article/images/fe_performance/10.png",d="/article/images/fe_performance/11.png",u="/article/images/fe_performance/12.png",b="/article/images/fe_performance/13.png",x="/article/images/fe_performance/14.png",k="/article/images/fe_performance/16.png",w="/article/images/fe_performance/17.png",v="/article/images/fe_performance/18.png",N="/article/images/fe_performance/19.png",B="/article/images/fe_performance/22.png",C="/article/images/fe_performance/23.png",T="/article/images/fe_performance/24.png",V="/article/images/fe_performance/25.png",j="/article/images/fe_performance/26.png",E="/article/images/fe_performance/27.png",I="/article/images/fe_performance/28.png",L="/article/images/fe_performance/29.png",P="/article/images/fe_performance/30.png",W="/article/images/fe_performance/31.png",q="/article/images/fe_performance/32.png",y="/article/images/fe_performance/33.png",z="/article/images/fe_performance/34.png",D="/article/images/fe_performance/35.png",H="/article/images/fe_performance/36.png",M="/article/images/fe_performance/37.png",O="/article/images/fe_performance/38.png",R="/article/images/fe_performance/39.png",S="/article/images/fe_performance/40.png",A="/article/images/fe_performance/41.png",F="/article/images/fe_performance/42.png",G="/article/images/fe_performance/43.png",J="/article/images/fe_performance/44.png",K="/article/images/fe_performance/45.png",Q="/article/images/pang/http.png",U={},X=n('<h2 id="前端性能优化入门与案例实战" tabindex="-1"><a class="header-anchor" href="#前端性能优化入门与案例实战" aria-hidden="true">#</a> 前端性能优化入门与案例实战</h2><h3 id="了解页面生命周期" tabindex="-1"><a class="header-anchor" href="#了解页面生命周期" aria-hidden="true">#</a> 了解页面生命周期</h3><ul><li><p>地址栏输入链接到页面展示的过程</p><ul><li>输入地址，创建网络请求线程： url 解析（协议，端口，路径），网络请求线程下载资源</li><li>建立 TCP 连接，发送 HTTP 请求： dns 解析，tcp 连接（三次握手四次挥手）</li><li>前后端的交互： 反向代理服务/负载均衡/防火墙（nginx）-&gt; 后端以一个 http 响应数据的形式返回给前端</li><li>关键路径渲染： html 解析，dom 树构建，css 解析，cssom 树构建，render 树构建，layout 布局，paint 绘制，composite 合成。</li></ul><p><img src="'+p+'" alt="页面生命周期"></p></li><li><p>优化方案</p><ul><li>加载优化 <ul><li>减少 http 请求次数</li><li>减少 http 请求大小</li><li>使用 CDN 加速</li><li>使用 http2.0</li></ul></li><li>构建优化 <ul><li>优化 webpack 配置</li><li>优化代码(压缩，去除无用代码，合并)</li><li>优化图片（压缩）</li><li>优化字体</li><li>优化第三方库</li></ul></li><li>缓存优化 <ul><li>优化缓存策略</li><li>优化缓存位置</li><li>优化缓存内容</li></ul></li><li>渲染优化 <ul><li>优化关键渲染路径</li><li>优化 css</li><li>优化 js</li><li>优化渲染流程（减少不必要的，重绘和回流）</li><li>优化动画</li><li>优化页面卡顿 <img src="'+o+'" alt="页面生命周期"><img src="'+m+'" alt="页面生命周期"></li></ul></li></ul></li></ul><h3 id="加载优化" tabindex="-1"><a class="header-anchor" href="#加载优化" aria-hidden="true">#</a> 加载优化</h3><ul><li>图片懒加载 <ul><li>原理：图片不在可视区域内，不加载，等到滚动到可视区域内，再去加载</li><li>实现：监听 scroll 事件，判断图片是否在可视区域内，如果在可视区域内，将 img 标签的 src 属性设置为真实的图片地址</li><li>api: IntersectionObserver/getBoundingClientRect <img src="'+_+'" alt="页面生命周期"><img src="'+g+'" alt="页面生命周期"></li></ul></li></ul><h3 id="构建性能优化" tabindex="-1"><a class="header-anchor" href="#构建性能优化" aria-hidden="true">#</a> 构建性能优化</h3><p><img src="'+f+'" alt="页面生命周期"><img src="'+h+'" alt="页面生命周期"></p><ul><li><p>把字符串形式代码的代码转出 ast 语法树，用到 babel/parser</p></li><li><p>对 ast 语法树进行遍历，找到对应的节点，进行替换，用到 babel/traverse</p></li><li><p>把 ast 语法树转成字符串形式的代码，用到 babel/generator</p><p><img src="'+d+'" alt="页面生命周期"></p></li><li><p>webpack5 开启多线程打包</p><ul><li>原理：开启多个子进程，每个子进程都有自己的进程堆栈和内存空间，互不影响，可以并行执行任务</li><li>实现：使用 thread-loader</li></ul></li></ul><p><img src="'+u+'" alt="页面生命周期"><img src="'+b+'" alt="页面生命周期"><img src="'+x+'" alt="页面生命周期"></p><ul><li>生产环境，打包原则 <img src="'+k+'" alt="页面生命周期"><img src="'+w+'" alt="页面生命周期"><img src="'+v+'" alt="页面生命周期"><img src="'+N+'" alt="页面生命周期"></li></ul><h3 id="渲染优化" tabindex="-1"><a class="header-anchor" href="#渲染优化" aria-hidden="true">#</a> 渲染优化</h3><p><img src="'+B+'" alt="页面生命周期"><img src="'+C+'" alt="页面生命周期"><img src="'+T+'" alt="页面生命周期"></p><ul><li><p>减少重排方案 <img src="'+V+'" alt="页面生命周期"><img src="'+j+'" alt="页面生命周期"></p></li><li><p>验证重绘方法</p><p><img src="'+E+'" alt="页面生命周期"></p></li><li><p>渲染性能优化（动画） <img src="'+I+'" alt="页面生命周期"><img src="'+L+'" alt="页面生命周期"></p></li><li><p>节流和防抖方案 <img src="'+P+'" alt="页面生命周期"><img src="'+W+'" alt="页面生命周期"><img src="'+q+'" alt="页面生命周期"><img src="'+y+'" alt="页面生命周期"></p></li><li><p>webWorker: 用于在后台运行脚本，不会影响页面的性能</p><ul><li>主线程和 worker 线程之间的通信 <ul><li>主线程和 worker 线程之间的通信，通过 postMessage 方法，发送消息</li><li>主线程和 worker 线程之间的通信，通过 onmessage 方法，接收消息</li></ul></li><li>计算密集型任务，使用 webWorker <img src="'+z+'" alt="页面生命周期"><img src="'+D+'" alt="页面生命周期"></li></ul></li></ul><h3 id="缓存性能优化" tabindex="-1"><a class="header-anchor" href="#缓存性能优化" aria-hidden="true">#</a> 缓存性能优化</h3><p><img src="'+H+'" alt="页面生命周期"><img src="'+M+'" alt="页面生命周期"></p><ul><li><p>强缓存 <img src="'+O+'" alt="页面生命周期"><img src="'+R+'" alt="页面生命周期"><img src="'+S+'" alt="页面生命周期"></p></li><li><p>协商缓存 <img src="'+A+'" alt="页面生命周期"><img src="'+F+'" alt="页面生命周期"><img src="'+G+'" alt="页面生命周期"><img src="'+J+'" alt="页面生命周期"></p></li><li><p>如何选择缓存策略：强缓存优先级高于协商缓存</p><p><img src="'+K+'" alt="页面生命周期"></p></li></ul><h2 id="http-图文" tabindex="-1"><a class="header-anchor" href="#http-图文" aria-hidden="true">#</a> http 图文</h2><p><img src="'+Q+'" alt="http"></p><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料" aria-hidden="true">#</a> 参考资料</h2>',19),Y={href:"https://www.imooc.com/learn/1376",target:"_blank",rel:"noopener noreferrer"},Z={href:"https://www.zhihu.com/question/49617379/answer/3229603034",target:"_blank",rel:"noopener noreferrer"},$={href:"https://juejin.cn/post/7220270978521333797",target:"_blank",rel:"noopener noreferrer"};function ee(ie,re){const i=t("ExternalLinkIcon");return s(),c("div",null,[X,e("ul",null,[e("li",null,[e("a",Y,[r("前端性能优化入门与案例实战"),a(i)])]),e("li",null,[e("a",Z,[r("为什么 html 不可以缓存？"),a(i)])]),e("li",null,[e("a",$,[r("意外惊喜！浏览器缓存优化方案，让页面加载速度飙升 48.5%！"),a(i)])])])])}const le=l(U,[["render",ee],["__file","index.html.vue"]]);export{le as default};
