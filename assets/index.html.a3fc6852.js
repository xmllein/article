const l=JSON.parse('{"key":"v-28833795","path":"/android/kotlin/","title":"","lang":"zh-CN","frontmatter":{},"excerpt":"","headers":[{"level":2,"title":"Android 项目目录介绍","slug":"android-项目目录介绍","link":"#android-项目目录介绍","children":[]},{"level":2,"title":"kotlin 的特点","slug":"kotlin-的特点","link":"#kotlin-的特点","children":[]},{"level":2,"title":"Kotlin 数据类型","slug":"kotlin-数据类型","link":"#kotlin-数据类型","children":[{"level":3,"title":"Kotlin 数据类型","slug":"kotlin-数据类型-1","link":"#kotlin-数据类型-1","children":[]},{"level":3,"title":"数据类型间的转换","slug":"数据类型间的转换","link":"#数据类型间的转换","children":[]},{"level":3,"title":"数据运算","slug":"数据运算","link":"#数据运算","children":[]}]},{"level":2,"title":"容器","slug":"容器","link":"#容器","children":[{"level":3,"title":"1.数组","slug":"_1-数组","link":"#_1-数组","children":[]},{"level":3,"title":"2.集合","slug":"_2-集合","link":"#_2-集合","children":[]}]},{"level":2,"title":"Kotlin 方法与 Lambda 表达式","slug":"kotlin-方法与-lambda-表达式","link":"#kotlin-方法与-lambda-表达式","children":[{"level":3,"title":"1. kotlin 的方法","slug":"_1-kotlin-的方法","link":"#_1-kotlin-的方法","children":[]},{"level":3,"title":"2.Lambda 表达式","slug":"_2-lambda-表达式","link":"#_2-lambda-表达式","children":[]}]},{"level":2,"title":"Kotlin 条件控制","slug":"kotlin-条件控制","link":"#kotlin-条件控制","children":[{"level":3,"title":"1.if 表达式","slug":"_1-if-表达式","link":"#_1-if-表达式","children":[]},{"level":3,"title":"2.when 表达式","slug":"_2-when-表达式","link":"#_2-when-表达式","children":[]},{"level":3,"title":"3.when 表达式的功能增强","slug":"_3-when-表达式的功能增强","link":"#_3-when-表达式的功能增强","children":[]},{"level":3,"title":"4.使用 when 表达式替代 if 表达式","slug":"_4-使用-when-表达式替代-if-表达式","link":"#_4-使用-when-表达式替代-if-表达式","children":[]}]},{"level":2,"title":"Kotlin 循环控制","slug":"kotlin-循环控制","link":"#kotlin-循环控制","children":[{"level":3,"title":"1.for 循环","slug":"_1-for-循环","link":"#_1-for-循环","children":[]},{"level":3,"title":"2.while 和 do-while 循环","slug":"_2-while-和-do-while-循环","link":"#_2-while-和-do-while-循环","children":[]},{"level":3,"title":"3.迭代区间和数列 常用","slug":"_3-迭代区间和数列-常用","link":"#_3-迭代区间和数列-常用","children":[]},{"level":3,"title":"4.循环中的 break 与 continue","slug":"_4-循环中的-break-与-continue","link":"#_4-循环中的-break-与-continue","children":[]}]},{"level":2,"title":"泛型","slug":"泛型","link":"#泛型","children":[{"level":3,"title":"1.泛型接口/类（泛型类型）","slug":"_1-泛型接口-类-泛型类型","link":"#_1-泛型接口-类-泛型类型","children":[]},{"level":3,"title":"2.泛型字段","slug":"_2-泛型字段","link":"#_2-泛型字段","children":[]},{"level":3,"title":"3.泛型方法","slug":"_3-泛型方法","link":"#_3-泛型方法","children":[]},{"level":3,"title":"4.泛型约束","slug":"_4-泛型约束","link":"#_4-泛型约束","children":[]},{"level":3,"title":"5.泛型中的 out 与 in","slug":"_5-泛型中的-out-与-in","link":"#_5-泛型中的-out-与-in","children":[]}]},{"level":2,"title":"kotlin 扩展函数","slug":"kotlin-扩展函数","link":"#kotlin-扩展函数","children":[{"level":3,"title":"扩展方法","slug":"扩展方法","link":"#扩展方法","children":[]},{"level":3,"title":"2.扩展方法的使用","slug":"_2-扩展方法的使用","link":"#_2-扩展方法的使用","children":[]},{"level":3,"title":"3.原理解析：Kotlin 扩展函数是怎么实现的","slug":"_3-原理解析-kotlin-扩展函数是怎么实现的","link":"#_3-原理解析-kotlin-扩展函数是怎么实现的","children":[]},{"level":3,"title":"4.泛型扩展方法","slug":"_4-泛型扩展方法","link":"#_4-泛型扩展方法","children":[]},{"level":3,"title":"5.扩展属性","slug":"_5-扩展属性","link":"#_5-扩展属性","children":[]},{"level":3,"title":"6.为伴生对象添加扩展","slug":"_6-为伴生对象添加扩展","link":"#_6-为伴生对象添加扩展","children":[]},{"level":3,"title":"7.Kotlin 中常用的扩展","slug":"_7-kotlin-中常用的扩展","link":"#_7-kotlin-中常用的扩展","children":[]}]},{"level":2,"title":"kotlin 一次四则运算计算器","slug":"kotlin-一次四则运算计算器","link":"#kotlin-一次四则运算计算器","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"updatedTime":null,"contributors":[]},"filePathRelative":"android/kotlin/README.md"}');export{l as data};
